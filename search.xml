<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>你好</title>
      <link href="/2019/07/04/hello-world/"/>
      <url>/2019/07/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是你的第一篇文章。 查看 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">文档</a> 以获得更多信息。 如果您在使用Hexo时遇到任何问题, 可以在 <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">故障排除中</a> 找到答案，或者您可以在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>上询问我。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一个新帖子"><a href="#创建一个新帖子" class="headerlink" title="创建一个新帖子"></a>创建一个新帖子</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>更多信息: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>更多信息: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>更多信息: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>更多信息: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ningx+GitHub部署Hexo</title>
      <link href="/2019/07/03/CentOS%E6%90%AD%E5%BB%BAhexo/"/>
      <url>/2019/07/03/CentOS%E6%90%AD%E5%BB%BAhexo/</url>
      
        <content type="html"><![CDATA[<h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p> 因为Centos7的yum仓库里面Git版本比较旧所以我们采用源码安装新版Git</p><h4 id="1-1安装编译源码依赖包"><a href="#1-1安装编译源码依赖包" class="headerlink" title="1.1安装编译源码依赖包"></a>1.1安装编译源码依赖包</h4><pre><code>yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel</code></pre><pre><code>yum install -y gcc perl-ExtUtils-MakeMaker</code></pre><h4 id="1-2卸载老版本Git"><a href="#1-2卸载老版本Git" class="headerlink" title="1.2卸载老版本Git"></a>1.2卸载老版本Git</h4><pre><code>yum remove -y git</code></pre><h4 id="1-3下载新版Git"><a href="#1-3下载新版Git" class="headerlink" title="1.3下载新版Git"></a>1.3下载新版Git</h4><p><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/" target="_blank" rel="noopener">下载Git链接</a></p><p>这是Git下载目录自行找最新版本</p><pre><code>wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.xz    //写下文章时最新版本</code></pre><pre><code>xz -d git-2.9.5.tar.xz          //将xz解压然后得到tar格式压缩文件 tar xvf git-2.9.5.tar         //解压tar文件</code></pre><h4 id="1-4编译安装Git"><a href="#1-4编译安装Git" class="headerlink" title="1.4编译安装Git"></a>1.4编译安装Git</h4><pre><code>cd git-2.9.5      //进入文件夹make prefix=/usr/local/git all     //编译至该目录下make prefix=/usr/local/git install   //安装到该目录</code></pre><p>注意：先编译在安装，编译速度取决于机器性能，等待一下就好了</p><p>编译好后配置环境变量</p><pre><code>vim /etc/profile</code></pre><p>在文件最下面写入变量</p><pre><code>export PATH=$PATH:/usr/local/git/bin    //这个目录是刚刚编译安装Git的目录</code></pre><p>配置好变量后刷新一下</p><pre><code>source /etc/profile</code></pre><p>最后用git –version查看版本，可以看到Git的版本号为<code>2.9.5</code>表示已经安装成功了</p><h3 id="2-配置Git用户"><a href="#2-配置Git用户" class="headerlink" title="2.配置Git用户"></a>2.配置Git用户</h3><pre><code>adduser gitpasswd gitchmod 740 /etc/sudoersvim /etc/sudoers</code></pre><p>在配置中找到这条记录</p><pre><code>## Allow root to run any commands anywhereroot    ALL=(ALL)       ALL</code></pre><p>添加Git的配置</p><pre><code>git ALL=(ALL) ALL</code></pre><p>然后把权限改回来 chmod 400 /etc/sudoers</p><h3 id="3-安装及配置Nginx"><a href="#3-安装及配置Nginx" class="headerlink" title="3.安装及配置Nginx"></a>3.安装及配置Nginx</h3><p>因为我的Yum仓库里有Nginx的包所以就直接Yum安装了，如果你的没有就自行百度Nginx的安装</p><h4 id="3-1安装Nginx"><a href="#3-1安装Nginx" class="headerlink" title="3.1安装Nginx"></a>3.1安装Nginx</h4><pre><code>yum install -y nginx    //安装Nginxsystemctl start nginx  //启动Nginxsystemctl enable nginx //开机启动Nginx</code></pre><h4 id="3-2配置Nginx"><a href="#3-2配置Nginx" class="headerlink" title="3.2配置Nginx"></a>3.2配置Nginx</h4><p>针对不同版本不同方式安装的Nginx配置文件位置可能不一样，我们可以用<code>nginx -t</code>查看配置文件位置，也可以用检查语法错误,我的配置文件在<code>/etc/nginx/nginx.conf</code>下</p><p><code>vim /etc/nginx/nginx.conf</code>命令进行编辑</p><pre><code>server {            listen               80 default_server;            listen               [ : : ]:80  default_server;            server_name    www.yangzhiwen.work;        #修改成你的域名            root                /MyBlog/public/;              #修改成网站目录下的public文件夹           # Load  configuration  files  for  the  default  server  block.            include /etc/nginx/default.d/*.conf;            location / {            }            error_page  404  /404.html;                  location = /40x.html {            }             error_page 500  502  503  504  /50x.html;                 location  =  /50x.html {            }        }</code></pre><p>然后<code>systemctl restart nginx</code>重启 服务</p><h3 id="4-安装Node-js"><a href="#4-安装Node-js" class="headerlink" title="4.安装Node.js"></a>4.安装Node.js</h3><h4 id="4-1下载Node-js"><a href="#4-1下载Node-js" class="headerlink" title="4.1下载Node.js"></a>4.1下载Node.js</h4><p><a href="https://nodejs.org/dist/" target="_blank" rel="noopener">下载Ngde.js链接</a></p><p>这是Node.js下载目录自行寻找最新版本</p><pre><code>wget https://nodejs.org/dist/v12.4.0/node-v12.4.0-linux-x64.tar.xz</code></pre><h4 id="4-2解压Node-js压缩包"><a href="#4-2解压Node-js压缩包" class="headerlink" title="4.2解压Node.js压缩包"></a>4.2解压Node.js压缩包</h4><pre><code>xz -d node-v12.4.0-linux-x64.tar.xztar -xvf node-v12.4.0-linux-x64.tar.xz</code></pre><p>移动到<code>/usr/local/node</code>目录下</p><pre><code>mv node-v12.4.0-linux-x64 /usr/local/node</code></pre><h4 id="4-3配置环境变量"><a href="#4-3配置环境变量" class="headerlink" title="4.3配置环境变量"></a>4.3配置环境变量</h4><pre><code>vim /etc/profile#编辑这个文件export PATH=$PATH:/usr/local/node/bin#添加内容，指定Node目录source /etc/profile#刷新一下环境</code></pre><p>输入<code>node -v</code>测试Node.js是否安装成功，输出版本即完成安装</p><h3 id="5-安装Hexo框架"><a href="#5-安装Hexo框架" class="headerlink" title="5.安装Hexo框架"></a>5.安装Hexo框架</h3><h4 id="5-1创建博客目录"><a href="#5-1创建博客目录" class="headerlink" title="5.1创建博客目录"></a>5.1创建博客目录</h4><p>这里的目录应该是刚刚Nginx里配置的目录，不然Nginx方式访问不上</p><pre><code>mkdir /MyBlog#创建目录cd /MyBlog#进入目录</code></pre><h4 id="5-2安装Hexo"><a href="#5-2安装Hexo" class="headerlink" title="5.2安装Hexo"></a>5.2安装Hexo</h4><pre><code>npm install -g hexo-cli</code></pre><h4 id="5-4修改配置"><a href="#5-4修改配置" class="headerlink" title="5.4修改配置"></a>5.4修改配置</h4><pre><code>vim _config.yml</code></pre><pre><code># Hexo Configuration ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # Site 站点信息设置 title:   杨梅君博客            #站点名字 subtitle:   #副标题 description:  #站描述 author: 杨梅君 #作者 language: zh-CN #语言 timezone:  #URL 链接设置 ## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39; url: http://www.yangzhiwen.work #设置成你的域名 root: / permalink: :year/:month/:day/:title/ permalink_defaults: -----------------------------------------------------------------略 deploy:     type: git    repo: git@github.com:mocorochio/micorochio.github.io.git #git仓库地址     branch: master     message: &#39;站点更新:{{now("YYYY-MM-DD HH/mm/ss")}}&#39;</code></pre><h3 id="6-部署到GitHub上"><a href="#6-部署到GitHub上" class="headerlink" title="6.部署到GitHub上"></a>6.部署到GitHub上</h3><h4 id="6-1设置本机Git全局配置"><a href="#6-1设置本机Git全局配置" class="headerlink" title="6.1设置本机Git全局配置"></a>6.1设置本机Git全局配置</h4><pre><code>git config --global user.email 2example@qq.com  //这里的eamil改成自己GitHub上的邮件地址git config --global user.name Catl07   //这里的name改成你Github的用户名</code></pre><h4 id="6-2生成ssh密码"><a href="#6-2生成ssh密码" class="headerlink" title="6.2生成ssh密码"></a>6.2生成ssh密码</h4><p>生成ssh密钥的作用是将本地文件部署到Github</p><pre><code>cd   //进到根目录ssh-keygen -t rsa -C example@qq.com    //不带-C和自己用户名邮箱Github不认可less .ssh/id_rsa.pub     /查看密钥</code></pre><h4 id="6-3创建博客工程"><a href="#6-3创建博客工程" class="headerlink" title="6.3创建博客工程"></a>6.3创建博客工程</h4><p>敲黑板！！！注意看！！！</p><h5 id="6-3-1新建一个储存库"><a href="#6-3-1新建一个储存库" class="headerlink" title="6.3.1新建一个储存库"></a>6.3.1新建一个储存库</h5><p>登录到你的GitHub然后点击这个位置，进去新建一个储存库</p><p><img src="https://catl07-1259398274.cos.ap-chengdu.myqcloud.com/Nginx%2BGitHub-bushu-Hexo/GitHub%E6%AD%A5%E9%AA%A41.PNG" alt></p><p>重点来了！ 名字设置成<code>你的用户名.github.io</code> 不然网站可能访问不上</p><p><img src="https://catl07-1259398274.cos.ap-chengdu.myqcloud.com/Nginx%2BGitHub-bushu-Hexo/GitHub%E6%AD%A5%E9%AA%A42.PNG" alt></p><p>因为我的用户名是Catl04所以库名字叫Catl04.github.io</p><h5 id="6-3-2在GitHub上导入ssh密钥"><a href="#6-3-2在GitHub上导入ssh密钥" class="headerlink" title="6.3.2在GitHub上导入ssh密钥"></a>6.3.2在GitHub上导入ssh密钥</h5><p>执行<code>less ~/.ssh/id_rsa.pub</code>将内容全部复制</p><p><img src="https://catl07-1259398274.cos.ap-chengdu.myqcloud.com/Nginx%2BGitHub-bushu-Hexo/ssh%E7%A4%BA%E4%BE%8B.png" alt></p><p>进入秘钥设置面板:<a href="https://link.jianshu.com/?t=https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a> 将复制内容全部复制到GitHub里面</p><h5 id="6-3-3配置Hexo与GitHub仓库同步"><a href="#6-3-3配置Hexo与GitHub仓库同步" class="headerlink" title="6.3.3配置Hexo与GitHub仓库同步"></a>6.3.3配置Hexo与GitHub仓库同步</h5><pre><code>#这里不能弄错，不然部署不上去deploy:  type: git  repo: https://github.com/Catl04/Catl04.github.io.git     #git仓库地址  branch: master             message: &#39;站点更新:{{now("YYYY-MM-DD HH/mm/ss")}}&#39;</code></pre><p>下面是获取仓库地址</p><p><img src="https://catl07-1259398274.cos.ap-chengdu.myqcloud.com/Nginx%2BGitHub-bushu-Hexo/%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%E8%8E%B7%E5%8F%96.PNG" alt></p><h3 id="修改主题"><a href="#修改主题" class="headerlink" title=".修改主题"></a>.修改主题</h3><h4 id="7-1主题下载"><a href="#7-1主题下载" class="headerlink" title="7.1主题下载"></a>7.1主题下载</h4><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题链接</a> 这是其他博主分享的主题，找一个自己喜欢的下载</p><h4 id="7-2使用主题"><a href="#7-2使用主题" class="headerlink" title="7.2使用主题"></a>7.2使用主题</h4><p>通过工具上传主题到博客目录下一个名叫<code>theme</code>文件夹内然后编辑主目录下的_config.yml</p><pre><code>#找到theme值  修改成你下载主题解压出来的文件夹名称</code></pre><h3 id="8-部署与访问测试"><a href="#8-部署与访问测试" class="headerlink" title="8.部署与访问测试"></a>8.部署与访问测试</h3><p><strong>部署:</strong></p><p>Ps:在本地博客文件目录</p><pre><code>hexo generate #编译Hexohexo d#将本地库更新至GitHub仓库</code></pre><p>执行<code>hexo d</code>后报如下错</p><pre><code>ERROR Deployer not found: git</code></pre><p>这是没有部署插件安装一下就好了</p><pre><code>npm install --save hexo-deployer-git</code></pre><p>再次部署就发现成功了</p><p><strong>访问</strong>:</p><p><a href="https://Catl04.github.io">https://Catl04.github.io</a></p><p>将<code>catl04</code>改成你的用户名就能访问了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
